rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidMessage() {
      let requiredFields = ['content', 'type', 'timestamp', 'user_id', 'thread_id'];
      let messageData = request.resource.data;
      
      return messageData.keys().hasAll(requiredFields) &&
             messageData.type in ['user', 'ai'] &&
             messageData.content is string &&
             messageData.content.size() <= 10000 &&
             messageData.timestamp is timestamp &&
             messageData.user_id is string &&
             messageData.thread_id is string;
    }
    
    // User collection rules
    match /users/{userId} {
      allow read: if isSignedIn() && isOwner(userId);
      allow write: if isSignedIn() && isOwner(userId);
      
      // Messages subcollection rules
      match /messages/{messageId} {
        allow read: if isSignedIn() && isOwner(userId);
        allow create: if isSignedIn() && 
                     isOwner(userId) && 
                     isValidMessage();
        allow update: if false;  // Messages are immutable
        allow delete: if false;  // Messages cannot be deleted
      }
      
      // User profile rules
      match /profile/{document=**} {
        allow read: if isSignedIn() && isOwner(userId);
        allow write: if isSignedIn() && isOwner(userId);
      }
    }
    
    // Global settings
    match /settings/{document=**} {
      allow read: if isSignedIn();
      allow write: if false;  // Only admin can modify settings
    }
  }
}
